{
  "paragraphs": [
    {
      "text": "%md\n\nPrior to performing any analysis, first we need to create the table definition for our data in Kinesis",
      "user": "anonymous",
      "dateUpdated": "2023-06-15T08:28:53+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "results": {},
        "enabled": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Prior to performing any analysis, first we need to create the table definition for our data in Kinesis</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686430464978_1863531440",
      "id": "paragraph_1686430464978_1863531440",
      "dateCreated": "2023-06-10T20:54:24+0000",
      "dateStarted": "2023-06-15T08:28:53+0000",
      "dateFinished": "2023-06-15T08:28:53+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:5357"
    },
    {
      "text": "%flink.ssql\n\nDROP TABLE IF EXISTS trips;\n\nCREATE TABLE trips (\n   `VendorID` INT,\n   `tpep_pickup_datetime` TIMESTAMP(3),\n   `tpep_dropoff_datetime` TIMESTAMP(3),\n   `passenger_count` INT,\n   `trip_distance` FLOAT,\n   `RatecodeID` INT,\n   `store_and_fwd_flag` STRING,\n   `PULocationID` INT,\n   `DOLocationID` INT,\n   `payment_type` INT,\n   `fare_amount` FLOAT,\n   `extra` FLOAT,\n   `mta_tax` FLOAT,\n   `tip_amount` FLOAT,\n   `tolls_amount` FLOAT,\n   `improvement_surcharge` FLOAT,\n   `total_amount` FLOAT,\n   `congestion_surcharge` FLOAT,\n   `arrival_time` TIMESTAMP(3) METADATA FROM 'timestamp' VIRTUAL,\n   `shard_id` VARCHAR(128) NOT NULL METADATA FROM 'shard-id' VIRTUAL,\n   `sequence_number` VARCHAR(128) NOT NULL METADATA FROM 'sequence-number' VIRTUAL,\n   WATERMARK FOR tpep_dropoff_datetime AS tpep_dropoff_datetime - INTERVAL '5' SECOND\n) \n WITH (\n   'connector' = 'kinesis',\n   'stream' = 'yellow-cab-trip',\n   'aws.region' = 'us-east-1',\n   'scan.stream.initpos' = 'LATEST',\n   'format' = 'json'\n);",
      "user": "anonymous",
      "dateUpdated": "2023-06-11T11:16:59+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Table has been dropped.\nTable has been created.\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686430468628_76061899",
      "id": "paragraph_1686430468628_76061899",
      "dateCreated": "2023-06-10T20:54:28+0000",
      "dateStarted": "2023-06-11T11:16:59+0000",
      "dateFinished": "2023-06-11T11:17:02+0000",
      "status": "FINISHED",
      "$$hashKey": "object:5358"
    },
    {
      "text": "%md\n\nQuery 1: Count number of trips for every borough in NYC\n\nThe data in trips table contains pickup location id (PULocationID), however, it does not contain information in which borough the trip was initiated. Luckily, we have the information which borough does every LocationID correspond to, in the separate file on S3 named taxi_zone_with_geohash.csv. \n\nFirst, we need to create a table that will represent the data in the taxi_zone_with_geohash.csv file.",
      "user": "anonymous",
      "dateUpdated": "2023-06-15T21:00:10+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "results": {},
        "enabled": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Query 1: Count number of trips for every borough in NYC</p>\n<p>The data in trips table contains pickup location id (PULocationID), however, it does not contain information in which borough the trip was initiated. Luckily, we have the information which borough does every LocationID correspond to, in the separate file on S3 named taxi_zone_with_geohash.csv.</p>\n<p>First, we need to create a table that will represent the data in the taxi_zone_with_geohash.csv file.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686430307554_1621859255",
      "id": "paragraph_1686430307554_1621859255",
      "dateCreated": "2023-06-10T20:51:47+0000",
      "dateStarted": "2023-06-15T21:00:10+0000",
      "dateFinished": "2023-06-15T21:00:10+0000",
      "status": "FINISHED",
      "$$hashKey": "object:5359"
    },
    {
      "text": "%flink.ssql(type=update)\n\nDROP TABLE IF EXISTS locations;\n\nCREATE TABLE locations (\n    `LocationID` INT,\n    `borough` STRING,\n    `zone` STRING,\n    `service_zone` STRING,\n    `latitude` FLOAT,\n    `longitude` FLOAT,\n    `geohash` STRING\n) WITH (\n   'connector'='filesystem',\n   'path' = 's3://nyc-yellow-cab-trip/taxi_zone_with_geohash.csv',\n   'format' = 'csv',\n   'csv.ignore-parse-errors' = 'true'\n)",
      "user": "anonymous",
      "dateUpdated": "2023-06-15T21:00:22+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Table has been dropped.\nTable has been created.\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686430456120_1967069300",
      "id": "paragraph_1686430456120_1967069300",
      "dateCreated": "2023-06-10T20:54:16+0000",
      "dateStarted": "2023-06-11T19:11:34+0000",
      "dateFinished": "2023-06-11T19:11:36+0000",
      "status": "FINISHED",
      "$$hashKey": "object:5360"
    },
    {
      "text": "%md\n\nLets looks at the first 10 rows from the locations table.",
      "user": "anonymous",
      "dateUpdated": "2023-06-15T08:29:23+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "results": {},
        "enabled": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Lets looks at the first 10 rows from the locations table.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686431812511_1496080078",
      "id": "paragraph_1686431812511_1496080078",
      "dateCreated": "2023-06-10T21:16:52+0000",
      "dateStarted": "2023-06-15T08:29:23+0000",
      "dateFinished": "2023-06-15T08:29:23+0000",
      "status": "FINISHED",
      "$$hashKey": "object:5361"
    },
    {
      "text": "%flink.ssql(type=update)\n\nSELECT * FROM locations LIMIT 10",
      "user": "anonymous",
      "dateUpdated": "2023-06-11T14:49:19+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "LocationID": "string",
                      "Borough": "string",
                      "Zone": "string",
                      "service_zone": "string",
                      "latitude": "string",
                      "longitude": "string",
                      "geohash": "string",
                      "fake_event_time": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686430384439_1330047124",
      "id": "paragraph_1686430384439_1330047124",
      "dateCreated": "2023-06-10T20:53:04+0000",
      "dateStarted": "2023-06-11T10:08:52+0000",
      "dateFinished": "2023-06-11T10:09:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:5362"
    },
    {
      "text": "%md\n\nAfter we defined our reference table, we can execute the query while joining the original source stream table trip with the reference table locations.",
      "user": "anonymous",
      "dateUpdated": "2023-06-15T21:00:32+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "results": {},
        "enabled": true,
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Time to run the query</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686431094794_1650397077",
      "id": "paragraph_1686431094794_1650397077",
      "dateCreated": "2023-06-10T21:04:54+0000",
      "dateStarted": "2023-06-15T08:36:12+0000",
      "dateFinished": "2023-06-15T08:36:12+0000",
      "status": "FINISHED",
      "$$hashKey": "object:5363"
    },
    {
      "text": "%flink.ssql(type=update)\n\nSELECT COUNT(*) as total_trip_pickups\nFROM trips\nWHERE EXISTS (\n    SELECT *\n    FROM locations\n    WHERE locations.LocationID = trips.PULocationID\n    AND locations.borough = 'Manhattan'\n)\nGROUP BY TUMBLE(trips.tpep_dropoff_datetime, INTERVAL '60' MINUTE)",
      "user": "anonymous",
      "dateUpdated": "2023-06-15T21:01:17+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 524.545,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "total_trip_pickups": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686431859814_1476333893",
      "id": "paragraph_1686431859814_1476333893",
      "dateCreated": "2023-06-10T21:17:39+0000",
      "dateStarted": "2023-06-11T12:37:55+0000",
      "dateFinished": "2023-06-11T12:54:38+0000",
      "status": "ABORT",
      "$$hashKey": "object:5364"
    },
    {
      "text": "%md\n\nQuery 2: Count number of trips that occurred in Manhattan every hour\nThe purpose of this query is to determine in which time windows NYC taxi demand is the highest in Manhattan. For that we will introduce streaming windows. \n\nWindows in Apache Flink are a way of dividing up a stream into a series of finite sub-streams, each containing all of the events that fall within a certain time frame. This makes it possible to perform computations and analyses on those sub-streams as discrete units.\n\nOne type of window that Flink supports is a tumble window. Tumbling windows are a fixed-size, non-overlapping windows that partition a stream into a series of non-overlapping windows of equal length. The start time of each window is determined by a fixed window size. In our case we will define a tumbling window of one hour interval.",
      "user": "anonymous",
      "dateUpdated": "2023-06-15T21:00:46+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "results": {},
        "enabled": true,
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Query 1: Determine in which time windows NYC taxi demand is the highest in Manhattan.</p>\n<p>In order to do that we need to retrieve borough information from the pickup LocationId, which is present in a reference table in S3.<br />\nThis reference table has to be defined in SQL for us to be able to perform the join with the trips data.</p>\n<p>Before using it, we need to define the corresponding SQL table.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686430190853_581143312",
      "id": "paragraph_1686430190853_581143312",
      "dateCreated": "2023-06-10T20:49:50+0000",
      "dateStarted": "2023-06-15T08:29:03+0000",
      "dateFinished": "2023-06-15T08:29:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:5365"
    },
    {
      "text": "%flink.ssql(type=update)\n   \nSELECT\n   locations.borough,\n   COUNT(*) as total_trip_pickups\nFROM trips\nJOIN locations\nON trips.PULocationID = locations.LocationID\nGROUP BY locations.borough;",
      "user": "anonymous",
      "dateUpdated": "2023-06-15T21:01:09+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "borough0",
                        "visible": true,
                        "width": 285,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "total_trip_pickups1",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "borough": "string",
                      "total_trip_pickups": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686433325772_409542927",
      "id": "paragraph_1686433325772_409542927",
      "dateCreated": "2023-06-10T21:42:05+0000",
      "dateStarted": "2023-06-11T19:14:01+0000",
      "dateFinished": "2023-06-11T19:32:01+0000",
      "status": "ABORT",
      "$$hashKey": "object:5366"
    },
    {
      "text": "%md\n\nWrite the query result to S3\n\nWe can write the results of our SQL queries the same way we were ingesting data into Kinesis - by using INSERT INTO statement. First, we would need to define a sink table, where we would like to write the data into and then perform the corresponding query.",
      "user": "anonymous",
      "dateUpdated": "2023-06-15T21:02:00+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686435019324_366184664",
      "id": "paragraph_1686435019324_366184664",
      "dateCreated": "2023-06-10T22:10:19+0000",
      "status": "READY",
      "$$hashKey": "object:5367"
    },
    {
      "text": "%flink.ssql(type=update)\n\nCREATE TABLE s3_query1 (\n   `borough` STRING,\n   `total_trip_pickups` INT\n) WITH (\n   'connector'='filesystem',\n   'path' = 's3://nyc-yellow-cab-trip/query1',\n   'format' = 'json'\n)",
      "user": "anonymous",
      "dateUpdated": "2023-06-15T21:02:46+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Table has been dropped.\nTable has been created.\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686471299290_480125987",
      "id": "paragraph_1686471299290_480125987",
      "dateCreated": "2023-06-11T08:14:59+0000",
      "dateStarted": "2023-06-11T20:21:18+0000",
      "dateFinished": "2023-06-11T20:21:20+0000",
      "status": "FINISHED",
      "$$hashKey": "object:5368"
    },
    {
      "text": "%flink.ssql(type=update)\n\nINSERT INTO s3_query1\n    SELECT\n      locations.borough as borough,\n      COUNT(*) as total_trip_pickups\n    FROM trips\n    JOIN locations\n    ON trips.PULocationID = locations.LocationID\n    GROUP BY locations.borough",
      "user": "anonymous",
      "dateUpdated": "2023-06-15T21:02:52+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1686471759516_1184380630",
      "id": "paragraph_1686471759516_1184380630",
      "dateCreated": "2023-06-11T08:22:39+0000",
      "dateStarted": "2023-06-11T20:40:26+0000",
      "dateFinished": "2023-06-11T20:40:30+0000",
      "status": "ERROR",
      "$$hashKey": "object:5369"
    }
  ],
  "name": "Analytics",
  "id": "2J2RBPSGG",
  "defaultInterpreterGroup": "flink",
  "version": "0.9.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/Analytics"
}